class ExtendedReflectionApi {
	private void __construct()
	public static ExtendedReflectionApi getInstance()
	public void setTypeFactory(TypeFactory $factory)
	public Type getTypeByName(string $typeName)
}
abstract class AbstractType {
	public Type getArrayType()
	public Type getMapIndexType()
	public Type getMapValueType()
	public boolean isArray()
	public boolean isClass()
	public boolean isPrimitive()
	public boolean isMap()
	abstract public string toString()
	abstract public boolean isStandardType()
	abstract public string getXmlName()
	abstract public DOMElement getXmlSchema(DOMDocument $dom)
}
class ArrayType extends AbstractType {
	public void __construct(string $typeName)
	public Type getArrayType()
	public Type getMapIndexType()
	public Type getMapValueType()
	public boolean isArray()
	public boolean isClass()
	public boolean isPrimitive()
	public boolean isMap()
	protected void _parseTypeName()
	public string toString()
	public boolean isStandardType()
	public string getXmlName(boolean $usePrefix)
	public string getNamespace()
	public DOMElement getXmlSchema(DOMDocument $dom,  $namespaceXMLSchema)
}
 class ClassType extends ExtReflectionClass {
	public Type getArrayType()
	public Type getMapIndexType()
	public Type getMapValueType()
	public boolean isArray()
	public boolean isClass()
	public boolean isPrimitive()
	public boolean isMap()
	public string toString()
	public boolean isStandardType()
	public string getXmlName(boolean $usePrefix)
	public DOMElement getXmlSchema(DOMDocument $dom,  $namespaceXMLSchema)
	public void __construct(string $name)
	public ExtReflectionMethod getMethod(string $name)
	public ExtReflectionMethod getConstructor()
	public ExtReflectionMethod[] getMethods()
	public ClassType getParentClass()
	public ExtReflectionProperty getProperty(string $name)
	public ExtReflectionProperty[] getProperties()
	public boolean isWebService()
	public string getShortDescription()
	public string getLongDescription()
	public boolean isTagged(string $with)
	public PHPDocTag[] getTags(string $name)
	final private void __clone()
	public static void export()
	public void __toString()
	public void getName()
	public void isInternal()
	public void isUserDefined()
	public void isInstantiable()
	public void getFileName()
	public void getStartLine()
	public void getEndLine()
	public void getDocComment()
	public void hasMethod()
	public void hasProperty()
	public void hasConstant()
	public void getConstants()
	public void getConstant()
	public void getInterfaces()
	public void isInterface()
	public void isAbstract()
	public void isFinal()
	public void getModifiers()
	public void isInstance()
	public void newInstance()
	public void newInstanceArgs()
	public void isSubclassOf()
	public void getStaticProperties()
	public void getStaticPropertyValue()
	public void setStaticPropertyValue()
	public void getDefaultProperties()
	public void isIterateable()
	public void implementsInterface()
	public void getExtension()
	public void getExtensionName()
}
class ExtReflectionClass extends ReflectionClass {
	public void __construct(string $name)
	public ExtReflectionMethod getMethod(string $name)
	public ExtReflectionMethod getConstructor()
	public ExtReflectionMethod[] getMethods()
	public ClassType getParentClass()
	public ExtReflectionProperty getProperty(string $name)
	public ExtReflectionProperty[] getProperties()
	public boolean isWebService()
	public string getShortDescription()
	public string getLongDescription()
	public boolean isTagged(string $with)
	public PHPDocTag[] getTags(string $name)
	final private void __clone()
	public static void export()
	public void __toString()
	public void getName()
	public void isInternal()
	public void isUserDefined()
	public void isInstantiable()
	public void getFileName()
	public void getStartLine()
	public void getEndLine()
	public void getDocComment()
	public void hasMethod()
	public void hasProperty()
	public void hasConstant()
	public void getConstants()
	public void getConstant()
	public void getInterfaces()
	public void isInterface()
	public void isAbstract()
	public void isFinal()
	public void getModifiers()
	public void isInstance()
	public void newInstance()
	public void newInstanceArgs()
	public void isSubclassOf()
	public void getStaticProperties()
	public void getStaticPropertyValue()
	public void setStaticPropertyValue()
	public void getDefaultProperties()
	public void isIterateable()
	public void implementsInterface()
	public void getExtension()
	public void getExtensionName()
}
class ExtReflectionExtension extends ReflectionExtension {
	public void __construct(string $name)
	public ExtReflectionFunction[] getFunctions()
	public ExtReflectionClass[] getClasses()
	final private void __clone()
	public static void export()
	public void __toString()
	public void getName()
	public void getVersion()
	public void getConstants()
	public void getINIEntries()
	public void getClassNames()
	public void getDependencies()
}
class ExtReflectionFunction extends ReflectionFunction {
	public void __construct(string $name)
	public ExtReflectionParameter[] getParameters()
	public Type getReturnType()
	public string getReturnDescription()
	public boolean isWebmethod()
	public string getShortDescription()
	public string getLongDescription()
	public boolean isTagged(string $with)
	public PHPDocTag[] getTags(string $name)
	final private void __clone()
	public static void export()
	public void __toString()
	public void isInternal()
	public void isUserDefined()
	public void getName()
	public void getFileName()
	public void getStartLine()
	public void getEndLine()
	public void getDocComment()
	public void getStaticVariables()
	public void invoke()
	public void invokeArgs()
	public void returnsReference()
	public void getNumberOfParameters()
	public void getNumberOfRequiredParameters()
	public void isDeprecated()
}
class ExtReflectionMethod extends ReflectionMethod {
	public void __construct(mixed $class, string $name)
	public ExtReflectionParameter[] getParameters()
	public Type getReturnType()
	public string getReturnDescription()
	public boolean isWebmethod()
	public string getShortDescription()
	public string getLongDescription()
	public boolean isTagged(string $with)
	public PHPDocTag[] getTags(string $name)
	public boolean isMagic()
	public static void export()
	public void __toString()
	public void isPublic()
	public void isPrivate()
	public void isProtected()
	public void isAbstract()
	public void isFinal()
	public void isStatic()
	public void isConstructor()
	public void isDestructor()
	public void getModifiers()
	public void invoke()
	public void invokeArgs()
	public void getDeclaringClass()
	public void getPrototype()
	final private void __clone()
	public void isInternal()
	public void isUserDefined()
	public void getName()
	public void getFileName()
	public void getStartLine()
	public void getEndLine()
	public void getDocComment()
	public void getStaticVariables()
	public void returnsReference()
	public void getNumberOfParameters()
	public void getNumberOfRequiredParameters()
	public void isDeprecated()
}
class ExtReflectionParameter extends ReflectionParameter {
	public void __construct(mixed $mixed, mixed $parameter)
	public Type getType()
	public boolean allowsNull()
	public boolean isOptional()
	public boolean isPassedByReference()
	public boolean isDefaultValueAvailable()
	public string getName()
	public mixed getDefaultValue()
	public ClassType getClass()
	final private void __clone()
	public static void export()
	public void __toString()
	public void getDeclaringClass()
	public void isArray()
}
class ExtReflectionProperty extends ReflectionProperty {
	public void __construct(mixed $class, string $name)
	public Type getType()
	public ClassType getDeclaringClass()
	final private void __clone()
	public static void export()
	public void __toString()
	public void getName()
	public void getValue()
	public void setValue()
	public void isPublic()
	public void isPrivate()
	public void isProtected()
	public void isStatic()
	public void isDefault()
	public void getModifiers()
	public void getDocComment()
}
class PrimitiveType extends AbstractType {
	public void __construct(string $typeName)
	public boolean isPrimitive()
	public string toString()
	public boolean isStandardType()
	public string getXmlName(boolean $usePrefix)
	public DOMElement getXmlSchema( $dom)
	public Type getArrayType()
	public Type getMapIndexType()
	public Type getMapValueType()
	public boolean isArray()
	public boolean isClass()
	public boolean isMap()
}
